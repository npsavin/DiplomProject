{result:[{name : "CVE-2014-0049",
symptom : "index  :  kernel/git/torvalds/linux.git master Linux kernel source tree Linus Torvalds summary refs log tree commit diff stats log msg author committer range diff options context: 1 2 3 4 5 6 7 8 9 10 15 20 25 30 35 40 space: include ignore mode: unified ssdiff author Andrew Honig <ahonig@google.com> 2014-02-27 18:35:14 (GMT) committer Paolo Bonzini <pbonzini@redhat.com> 2014-02-27 18:35:22 (GMT) commit a08d3b3b99efd509133946056531cdf8f3a0c09b  ( patch ) tree 3478565fdecc5064fcc1521f7050f4d3fadb86c1 parent b20c9f29c5c25921c6ad18b50d4b61e6d181c3cc  ( diff ) kvm: x86: fix emulator buffer overflow (CVE-2014-0049) The problem occurs when the guest performs a pusha with the stack address pointing to an mmio address (or an invalid guest physical address) to start with, but then extending into an ordinary guest physical address ; If the guest does nothing else it eventually leads to a a crash on a memcpy from invalid memory address ; However if a guest code can cause the vm to be destroyed in another vcpu with excellent timing, then kvm_clear_async_pf_completion_queue can be used by the guest to control the data that\'s pointed to by the call to cancel_work_item, which can be used to gain execution",
threat : "However if a guest code can cause the vm to be destroyed in another vcpu with excellent timing, then kvm_clear_async_pf_completion_queue can be used by the guest to control the data that\'s pointed to by the call to cancel_work_item, which can be used to gain execution",
consequences : "index  :  kernel/git/torvalds/linux.git master Linux kernel source tree Linus Torvalds summary refs log tree commit diff stats log msg author committer range diff options context: 1 2 3 4 5 6 7 8 9 10 15 20 25 30 35 40 space: include ignore mode: unified ssdiff author Andrew Honig <ahonig@google.com> 2014-02-27 18:35:14 (GMT) committer Paolo Bonzini <pbonzini@redhat.com> 2014-02-27 18:35:22 (GMT) commit a08d3b3b99efd509133946056531cdf8f3a0c09b  ( patch ) tree 3478565fdecc5064fcc1521f7050f4d3fadb86c1 parent b20c9f29c5c25921c6ad18b50d4b61e6d181c3cc  ( diff ) kvm: x86: fix emulator buffer overflow (CVE-2014-0049) The problem occurs when the guest performs a pusha with the stack address pointing to an mmio address (or an invalid guest physical address) to start with, but then extending into an ordinary guest physical address ; Fixes: f78146b0f9230765c6315b2e14f56112513389ad Signed-off-by: Andrew Honig <ahonig@google.com> Cc: stable@vger.kernel.org (3.5+) Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>  Diffstat -rw-r--r-- arch/x86/kvm/x86.c 2 1 files changed, 1 insertions, 1 deletions diff --git a/arch/x86/kvm/x86.c b/arch/x86/kvm/x86.c ",
countermeasures : "index  :  kernel/git/torvalds/linux.git master Linux kernel source tree Linus Torvalds summary refs log tree commit diff stats log msg author committer range diff options context: 1 2 3 4 5 6 7 8 9 10 15 20 25 30 35 40 space: include ignore mode: unified ssdiff author Andrew Honig <ahonig@google.com> 2014-02-27 18:35:14 (GMT) committer Paolo Bonzini <pbonzini@redhat.com> 2014-02-27 18:35:22 (GMT) commit a08d3b3b99efd509133946056531cdf8f3a0c09b  ( patch ) tree 3478565fdecc5064fcc1521f7050f4d3fadb86c1 parent b20c9f29c5c25921c6ad18b50d4b61e6d181c3cc  ( diff ) kvm: x86: fix emulator buffer overflow (CVE-2014-0049) The problem occurs when the guest performs a pusha with the stack address pointing to an mmio address (or an invalid guest physical address) to start with, but then extending into an ordinary guest physical address"
looses : "However if a guest code can cause the vm to be destroyed in another vcpu with excellent timing, then kvm_clear_async_pf_completion_queue can be used by the guest to control the data that\'s pointed to by the call to cancel_work_item, which can be used to gain execution"
}]}